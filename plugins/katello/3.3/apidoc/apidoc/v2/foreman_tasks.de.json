{"docs":{"name":"Foreman","info":"\n\u003cp\u003eForeman API v2 is currently the default API version.\u003c/p\u003e\n","copyright":"","doc_url":"../../apidoc/v2","api_url":"/api","resources":[{"doc_url":"../../apidoc/v2/foreman_tasks","api_url":"/api","name":"Foreman tasks","short_description":null,"full_description":"","version":"v2","formats":null,"metadata":null,"methods":[{"doc_url":"../../apidoc/v2/foreman_tasks/summary","name":"summary","apis":[{"api_url":"/foreman_tasks/api/tasks/summary","http_method":"GET","short_description":"Show task summary","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/show","name":"show","apis":[{"api_url":"/foreman_tasks/api/tasks/:id","http_method":"GET","short_description":"Show task details","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"id","full_name":"id","description":"\n\u003cp\u003eUUID of the task\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"string from 2 to 128 characters containing only alphanumeric characters, space, '_', '-' with no leading or trailing space..","expected_type":"string","metadata":null,"show":true,"validations":[]}],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/bulk_search","name":"bulk_search","apis":[{"api_url":"/foreman_tasks/api/tasks/bulk_search","http_method":"POST","short_description":"List dynflow tasks for uuids","deprecated":null}],"formats":null,"full_description":"\n\u003cp\u003eFor every search it returns the list of tasks that satisfty the condition. The reason for supporting multiple searches is the UI that might be ending needing periodic updates on task status for various searches at the same time. This way, it is possible to get all the task statuses with one request.\u003c/p\u003e\n","errors":[],"params":[{"name":"searches","full_name":"searches","description":"\n\u003cp\u003eList of uuids to fetch info about\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Must be an Array of nested elements","expected_type":"array","metadata":null,"show":true,"validations":[],"params":[{"name":"search_id","full_name":"searches[search_id]","description":"\n\u003cp\u003eArbitraty value for client to identify the the request parts with results. It’s passed in the results to be able to pair the requests and responses properly.\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"type","full_name":"searches[type]","description":"","required":false,"allow_nil":false,"validator":"Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003eresource\u003c/code\u003e, \u003ccode\u003etask\u003c/code\u003e.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"task_id","full_name":"searches[task_id]","description":"\n\u003cp\u003eIn case :type = ‘task’, find the task by the uuid\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"user_id","full_name":"searches[user_id]","description":"\n\u003cp\u003eIn case :type = ‘user’, find tasks for the user\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"resource_type","full_name":"searches[resource_type]","description":"\n\u003cp\u003eIn case :type = ‘resource’, what resource type we’re searching the tasks for\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"resource_type","full_name":"searches[resource_type]","description":"\n\u003cp\u003eIn case :type = ‘resource’, what resource id we’re searching the tasks for\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"action_types","full_name":"searches[action_types]","description":"\n\u003cp\u003eReturn just tasks of given action type, e.g. [Actions::Katello::Repository::Synchronize]\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Must be one of: String.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"active_only","full_name":"searches[active_only]","description":"","required":false,"allow_nil":false,"validator":"boolean","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"page","full_name":"searches[page]","description":"","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"per_page","full_name":"searches[per_page]","description":"","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]}],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/bulk_resume","name":"bulk_resume","apis":[{"api_url":"/foreman_tasks/api/tasks/bulk_resume","http_method":"POST","short_description":"Resume all paused error tasks","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"search","full_name":"search","description":"\n\u003cp\u003eResume tasks matching search string\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"task_ids","full_name":"task_ids","description":"\n\u003cp\u003eResume specific tasks by ID\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Must be an array of any type","expected_type":"array","metadata":null,"show":true,"validations":[]}],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/index","name":"index","apis":[{"api_url":"/foreman_tasks/api/tasks","http_method":"GET","short_description":"List tasks","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"search","full_name":"search","description":"\n\u003cp\u003eSuchbegriff\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"page","full_name":"page","description":"\n\u003cp\u003eSeitennummer, beginnend bei 1\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"number.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"per_page","full_name":"per_page","description":"\n\u003cp\u003eAnzahl der angezeigten Ergebnisse pro Seite\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"number.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"order","full_name":"order","description":"\n\u003cp\u003eSort field and order, e.g. ‘name DESC’\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"sort","full_name":"sort","description":"\n\u003cp\u003eHash-Version des “order”-Parameters\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Hash","expected_type":"hash","metadata":null,"show":true,"validations":[],"params":[{"name":"by","full_name":"sort[by]","description":"\n\u003cp\u003eErgebnisse nach diesem Feld sortieren\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"order","full_name":"sort[order]","description":"\n\u003cp\u003eReihenfolge der sortierten Ergebnisse (z. B. ASC für aufsteigend)\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]}],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/callback","name":"callback","apis":[{"api_url":"/foreman_tasks/api/tasks/callback","http_method":"POST","short_description":"Send data to the task from external executor (such as smart_proxy_dynflow)","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"callback","full_name":"callback","description":"","required":false,"allow_nil":false,"validator":"Hash","expected_type":"hash","metadata":null,"show":true,"validations":[],"params":[{"name":"task_id","full_name":"callback[task_id]","description":"\n\u003cp\u003eUUID of the task\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"string from 2 to 128 characters containing only alphanumeric characters, space, '_', '-' with no leading or trailing space..","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"step_id","full_name":"callback[step_id]","description":"\n\u003cp\u003eThe ID of the step inside the execution plan to send the event to\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]},{"name":"data","full_name":"data","description":"\n\u003cp\u003eData to be sent to the action\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Hash","expected_type":"hash","metadata":null,"show":true,"validations":[]}],"examples":[],"metadata":null,"see":[],"headers":[],"show":true}],"headers":[]}],"link_extension":".de.html"}}